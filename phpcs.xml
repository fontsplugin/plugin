<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Fonts Plugin">

	<description>A custom set of rules to check for a WordPress project</description>

	<!-- What NOT to scan. -->
	<exclude-pattern>*/bin/*</exclude-pattern>
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*/node_modules/*</exclude-pattern>
	<exclude-pattern>*/*.asset.php</exclude-pattern> <!-- This file is generated by the Gutenberg build process. -->
	<exclude-pattern>*/dependencies/*</exclude-pattern> <!-- This folder is generated by the PHP scoping process. -->

	<!-- How to scan. -->
	<arg value="sp"/> <!-- Show sniff and progress. -->
	<arg name="colors"/> <!-- Show results with colors. Disable if working on Windows. -->
	<arg name="parallel" value="8"/> <!-- Enables parallel processing when available for faster results. -->
	<arg name="extensions" value="php"/> <!-- Only scan PHP files. -->

	<!-- Run against the PHPCompatibilityWP ruleset and check for cross-version support for PHP 5.6 and higher. -->
	<rule ref="PHPCompatibilityWP"/>
	<config name="testVersion" value="5.6-"/>

	<!-- Run against the WordPress-Extra ruleset and check for the minimum supported WP version. -->
	<rule ref="WordPress-Extra">
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
		<exclude name="WordPress.Files.FileName.InvalidClassFileName" />
	</rule>
	<config name="minimum_wp_version" value="6.0"/>

	<!-- Disallow blank lines at start/end of for/foreach/if blocks. -->
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_check" value="true"/>
		</properties>
	</rule>

	<!-- Ensure documentation blocks follow basic formatting like containing a short description and not mixing tag groups. -->
	<rule ref="Generic.Commenting.DocComment">
		<!-- Ignore @param tags not being first since normally start with @since and @version tags. -->
		<exclude name="Generic.Commenting.DocComment.ParamNotFirst" />
	</rule>

	<!-- Check that function comments exist and that they contain @param, @return and @throws tags. -->
	<rule ref="Squiz.Commenting.FunctionComment">
		<properties>
			<!-- Ignore missing tags if @inheritDoc is present. -->
			<property name="skipIfInheritdoc" value="true" />
		</properties>
		<!-- Ignore missing type hints since we sometimes want to ignore them on hooks. -->
		<exclude name="Squiz.Commenting.FunctionComment.TypeHintMissing"/>
		<exclude name="Squiz.Commenting.FunctionComment.ScalarTypeHintMissing"/>
	</rule>

	<!-- Check that class comments exists. -->
	<rule ref="Squiz.Commenting.ClassComment">
		<!-- Ignore the presence of tags such as @version and @since. -->
		<exclude name="Squiz.Commenting.ClassComment.TagNotAllowed" />
	</rule>

		<!-- Exclude a few select sniffs/errorcodes for specific reasons and add configuration for a sniff.-->
	<rule ref="WordPress">
		<properties>
			<property name="minimum_supported_version" value="6.0"/>
		</properties>

		<!-- Demanding Yoda conditions is stupid. -->
		<exclude name="WordPress.PHP.YodaConditions"/>

		<!-- A while loop is the only valid control structure where an assignment can be justified. -->
		<exclude name="WordPress.CodeAnalysis.AssignmentInCondition.FoundInWhileCondition"/>
	</rule>

	<!-- Add in some extra rules from other standards. -->
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.Commenting.Todo"/>
</ruleset>